// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductVariationName {
  id Int @id @default(autoincrement())
  name String
  variations ProductVariationCombination[]
  createdAt DateTime @default(now())
}

model ProductVariationValue {
  id Int @id @default(autoincrement())
  value String
  variations ProductVariationCombination[]
  createdAt DateTime @default(now())
}

model ProductVariationCombination {
  id Int @id @default(autoincrement())
  name ProductVariationName @relation(fields: [nameId], references: [id])
  nameId Int
  value ProductVariationValue @relation(fields: [valueId], references: [id])
  valueId Int
  products Product[]
  createdAt DateTime @default(now())
  userOrders UserOrder[]
}

model Product {
  id      Int      @id @default(autoincrement())
  name    String
  price   Float
  basePrice Float
  variations ProductVariationCombination[]
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  userOrders UserOrder[]
  userWishlists UserWishlist[]
}


model User {
  id Int @id @default(autoincrement())
  name String?
  email String @unique
  createdAt DateTime @default(now())
  orders UserOrder[]
  wishlists UserWishlist[]
}

model UserOrder {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  status ShipStatus @relation(fields: [shipStatusId], references: [id])
  shipStatusId Int
  productVariation ProductVariationCombination @relation(fields: [productVariationId], references: [id])
  productVariationId Int
  createdAt DateTime @default(now())
}

model UserWishlist {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int

}

model ShipStatus {
  id Int @id @default(autoincrement())
  status String
  createdAt DateTime @default(now())
  userOrders UserOrder[]
}
